apiVersion: influxdata.com/v2alpha1
kind: Dashboard
metadata:
  name: eager-cori-839000
spec:
  associations:
    - kind: Label
      name: cool-ride-8cd001
  charts:
    - axes:
        - base: '10'
          name: x
          scale: linear
        - base: '10'
          name: y
          scale: linear
      colors:
        - hex: '#00A3FF'
          id: acc6b9a5-b4b0-496a-8b6b-5f9d552e3602
          name: Solid Blue
          type: scale
        - hex: '#00A3FF'
          id: e5733dfd-4645-4de6-b4f2-1c448794f01a
          name: Solid Blue
          type: scale
        - hex: '#00A3FF'
          id: 0dbb9942-2cbf-4051-b615-63e9bd28b45a
          name: Solid Blue
          type: scale
      geom: line
      height: 4
      hoverDimension: auto
      kind: Xy
      legendOpacity: 1
      legendOrientationThreshold: 10
      name: CPU Usage
      position: overlaid
      queries:
        - query: |
            from(bucket: "laptop")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r["_measurement"] == "cpu")
              |> filter(fn: (r) => r["_field"] == "usage_user")
              |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
      width: 4
      xCol: _time
      yCol: _value
    - axes:
        - base: '10'
          name: x
          scale: linear
        - base: '10'
          name: y
          scale: linear
      colors:
        - hex: '#00A3FF'
          id: acc6b9a5-b4b0-496a-8b6b-5f9d552e3602
          name: Solid Blue
          type: scale
        - hex: '#00A3FF'
          id: e5733dfd-4645-4de6-b4f2-1c448794f01a
          name: Solid Blue
          type: scale
        - hex: '#00A3FF'
          id: 0dbb9942-2cbf-4051-b615-63e9bd28b45a
          name: Solid Blue
          type: scale
      geom: line
      height: 4
      hoverDimension: auto
      kind: Xy
      legendOpacity: 1
      legendOrientationThreshold: 10
      name: CPU Usage
      position: overlaid
      queries:
        - query: |
            from(bucket: "server")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r["_measurement"] == "cpu")
              |> filter(fn: (r) => r["_field"] == "usage_user")
              |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)
      width: 4
      xCol: _time
      xPos: 4
      yCol: _value
  description: Dashboard with two cells with the same name, but different flux
  name: Test Dashboard 
